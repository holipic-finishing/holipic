<template>
	<div>
		<page-title-bar></page-title-bar>
		<div style="padding:0px 20px">
		  <v-card>
		    <v-card-title class="headline font-weight-regular blue-grey white--text">Information</v-card-title>
		    <v-card-text>
		    	<div class="container">
		    		<div class="row">
		    			<div class="col-sm-4">
							<img src="/static/avatars/user-12.jpg" class="img-responsive rounded-circle mr-4" alt="user profile" width="70%" /> 
		    			</div>
		    			
		    			<div class="col-sm-8">
		    				<v-form ref="form" lazy-validation>
			    				<label class="company-label">Company name:</label>
			    				<v-flex xs12 >
						          <v-text-field
						            label="Outline"
						            single-line
						            outline
						            type="text"
						            name="company.name"
						            v-model="company.name"
						            required
						            :rules="[rules.required]"
						          ></v-text-field>
						        </v-flex>
						        <label class="company-label">Description:</label>
						        <v-flex xs12 >
						          <v-text-field
						            label="Outline"
						            single-line
						            outline
						            v-model="company.description"
						            :rules="[rules.required]"
						          ></v-text-field>
						        </v-flex>
						        <label class="company-label">Address:</label>
						        <v-flex xs12 >
						          <v-text-field
						            label="Outline"
						            single-line
						            outline
						            v-model="company.address"
						            :rules="[rules.required]"
						          ></v-text-field>
						        </v-flex>

					        </v-form>
					        <v-btn
						      color="info"
						      :disabled="!valid"
						      @click="updateCompany()"
						    >
						      Update Company
						    </v-btn>
						     
		    			</div>

		    		</div>
		    	</div>
		      	<!-- <div class="media pos-relative">
					<img src="/static/avatars/user-12.jpg" class="img-responsive rounded-circle mr-4" alt="user profile" width="20%" /> -->
					<!-- <div class="media-body">
						<span class="pink--text">Request</span>
						<h2>Andre Hicks</h2>
						<span>Sr. Develoepr @Oracle</span>
						<div class="btn-wrapper">
						<v-btn color="success">Accept</v-btn>
						<v-btn color="error">Reject</v-btn>
						</div>
					</div> -->
					<!-- <v-avatar color="warning" class="overlap">
						<v-icon dark>ti-id-badge</v-icon>
					</v-avatar> -->
			<!-- </div> -->
		    </v-card-text>
		  </v-card>
		</div>
		<div style="padding:10px 20px">
		  <v-card>
		    <v-card-title class="headline font-weight-regular blue white--text">Chart</v-card-title>
		    <v-card-text>
					<div class="ladgend-wrapper mb-3">
						<div class="row">
							<!-- <div class="col-sm-4">
								<p class="mb-0"><span class="ladgend ladgend-success"></span> <span>Open Rate</span></p>
								<p class="mb-0"><span class="ladgend ladgend-pink"></span> <span>Recurring Payments</span></p>
							</div>
 -->						

							<!-- <div class="col-sm-2">
								 <v-select
						          :items="selectDate"
						          label="Choose Date or Month"
						          outline
						          v-model="valueSelectDateMonth"
						        ></v-select>
							</div>

							<div class="col-sm-4">
								
								 <v-menu
							        ref="menu"
							        :close-on-content-click="false"
							        v-model="menu"
							        :nudge-right="40"
							        :return-value.sync="date"
							        lazy
							        transition="scale-transition"
							        offset-y
							        full-width
							        min-width="290px"
							      >
							        <v-text-field
							          slot="activator"
							          v-model="date"
							          label="Date/Month"
							          prepend-icon="event"
							          outline
							          @change="loadChartWithDayMonth"
							        ></v-text-field>

							        <v-date-picker v-model="date" no-title scrollable :type="valueSelectDateMonth == 'Month' ? 'month' : 'date'">
							          <v-spacer></v-spacer>
							          <v-btn flat color="primary" @click="menu = false">Cancel</v-btn>
							          <v-btn flat color="primary" @click="loadChartWithDayMonth">OK</v-btn>
							        </v-date-picker>
							      </v-menu>
							</div> -->
						
						</div>
					
					</div>

					<div class="mt-4 visitor-area-chart">
						<div class="d-custom-flex justify-space-between px-4 mb-4 label-wrap">
							<nav class="nav nav-bar-chart">
							  <a class="nav-link" :class="typeTimeReturn === 'revenue' ? 'active' : '' " @click="activeTypeTime('revenue')">Revenue</a>
							  <a class="nav-link" :class="typeTimeReturn === 'day' ? 'active' : '' " @click="activeTypeTime('day')">Day</a>
							  <a class="nav-link" :class="typeTimeReturn === 'week' ? 'active' : '' " @click="activeTypeTime('week')">Week</a>
							  <a class="nav-link" :class="typeTimeReturn === 'month' ? 'active' : '' " @click="activeTypeTime('month')">Month</a>
							  <a class="nav-link" :class="typeTimeReturn === 'year' ? 'active' : '' " @click="activeTypeTime('year')">Year</a>
							</nav>
							<div class="d-custom-flex justify-space-between w-30">
								<div class="w-50">
									<h4 class="info--text mb-0">$ 35,455</h4>
									<p class="fs-12 grey--text mb-0">International Visior</p>
								</div>
								<div class="w-50">
									<h4 class="primary--text mb-0">$ 35,455</h4>
									<p class="fs-12 grey--text mb-0">Domestic Visior</p>
								</div>
							</div>
						</div>
						<div class="px-4 pos-relative">
							<chart :width="300" :height="400" :companyId="companyId"></chart>
						</div>
					</div>

					<v-card-text>
					<div class="ladgend-wrapper mb-3">
						<div class="row">
							<div class="col-sm-4">
								  <v-menu
							        ref="menu2"
							        :close-on-content-click="false"
							        v-model="menu2"
							        :nudge-right="40"
							        :return-value.sync="startTime"
							        lazy
							        transition="scale-transition"
							        offset-y
							        full-width
							        min-width="290px"
							        v-show = "typeTime == 'day' || typeTime == 'month' ? true : false"
							      >
							        <v-text-field
							          slot="activator"
							          v-model="startTime"
							          :label="typeTime == 'month' ? 'Start Month' : 'Start Date'"
							          prepend-icon="event"
							          outline
							          @change="saveDate"
							        ></v-text-field>

							        <v-date-picker v-model="startTime" no-title scrollable :max="new Date().toISOString().substr(0, 10)"
							        :type="typeTime == 'month' ? 'month' : 'date'">
							          <v-spacer></v-spacer>
							          <v-btn flat color="primary" @click="menu2 = false">Cancel</v-btn>
							          <v-btn flat color="primary" @click="saveDate">OK</v-btn>
							        </v-date-picker>
							      </v-menu>
							       <!-- datepicker start year -->
						          <v-menu
								      ref="menu4"
								      :close-on-content-click="false"
								      v-model="menu4"
								      :nudge-right="40"
								      lazy
								      transition="scale-transition"
								      offset-y
								      full-width
								      min-width="290px"
								      v-show = "typeTime == 'year' ? true : false"
								    >
								      <v-text-field
								        slot="activator"
								        v-model="startTime"
								        label="Start Year"
								        prepend-icon="event"
								        readonly
								        outline
								      ></v-text-field>
								      <v-date-picker
								        ref="picker"
								        v-model="startTime"
								        @input="saveStartYear"
								        reactive
								        no-title
								        max="2018/01/01"
								        type="year"
								      ></v-date-picker>
								    </v-menu>
								     <!-- datepicker start year -->

							      <!-- <date-picker v-model="year" :append-to-body="true" lang="en" type="year" format="YYYY" placeholder="Select Year" width="300" popupStyle="top" id="date-picker"></date-picker> -->
							</div>

							<div class="col-sm-4">
								
								 <v-menu
							        ref="menu3"
							        :close-on-content-click="false"
							        v-model="menu3"
							        :nudge-right="40"
							        :return-value.sync="endTime"
							        lazy
							        transition="scale-transition"
							        offset-y
							        full-width
							        min-width="290px"
							         v-show = "typeTime == 'day' || typeTime == 'month' ? true : false"
							        
							      >
							        <v-text-field
							          slot="activator"
							          v-model="endTime"
							          :label="typeTime == 'month' ? 'End Month' : 'End Date'"
							          prepend-icon="event"
							          outline
							          @change="saveDate"
							        ></v-text-field>

							        <v-date-picker v-model="endTime" no-title scrollable :max="new Date().toISOString().substr(0, 10)" 
							        :type="typeTime == 'month' ? 'month' : 'date'">
							          <v-spacer></v-spacer>
							          <v-btn flat color="primary" @click="menu3 = false">Cancel</v-btn>
							          <v-btn flat color="primary" @click="saveDate">OK</v-btn>
							        </v-date-picker>
							      </v-menu>

							      <!-- datepicker endyear -->
							      <v-menu
								      ref="menu5"
								      :close-on-content-click="false"
								      v-model="menu5"
								      :nudge-right="40"
								      lazy
								      transition="scale-transition"
								      offset-y
								      full-width
								      min-width="290px"
								      v-show = "typeTime == 'year' ? true : false"
								    >
								      <v-text-field
								        slot="activator"
								        v-model="endTime"
								        label="End Year"
								        prepend-icon="event"
								        readonly
								        outline
								      ></v-text-field>
								      <v-date-picker
								        ref="picker2"
								        v-model="endTime"
								        @input="saveEndYear"
								        reactive
								        no-title
								        :max="'2018/01/01'"
								        type="year"
								      ></v-date-picker>
								    </v-menu>

							      <!-- datepicker endyear -->

							      
							</div>

							<div class="col-sm-4">
								<v-btn color="info" :disabled="!valid" @click="submitFilterTime" v-show = "typeTime == 'day' || typeTime == 'month' || typeTime == 'year' ? true : false" >
									<span><i class="ti-filter"></i></span> &nbsp;Filter
						      	</v-btn>
								<!-- TOTAL: ......... -->
							</div>
						</div>
					
					</div>
				</v-card-text>

		    </v-card-text>		      
		  </v-card>
		</div>
	</div>	
</template>

<script>
import config from '../../config/index.js'
import Vue from 'vue'
import chart from "./total-amount-chart.js"
import moment from "moment"
import DatePicker from 'vue2-datepicker'
export default {
  	name: 'chart-company',
   	components: {
    chart, DatePicker
  },
  data () {
    return {
    	loader: null,
        loading: false,
        company: [],
        companyId: this.$route.query.companyId,
        valid: true,
        rules: {
        	required: value => !!value || 'This field is required.',
        	min: value => value.length >= 8 || 'Min 8 characters',
        },
        date: new Date().toISOString().substr(0, 10),
        year: '',
      	menu: false,
      	modal: false,
      	menu2: false,
      	menu3:false,
      	menu4: false,
      	menu5: false,
      	selectDate: ['Day', 'Month'],
      	valueSelectDateMonth: 'Day',
      	typeTime: 'revenue',
      	startTime: '',
      	endTime : '',
      	isActiveRevenue: true,
      	isActiveYear: false,
      	isActiveDay: false,
      	isActiveWeek: false,
      	isActiveMonth: false   
    }

  },
  watch: {
  	loader () {
        const l = this.loader
        this[l] = !this[l]
        setTimeout(() => (this[l] = false), 3000)
        this.loader = nulls
    }
  },

  mounted() {
  	//alert(this.companyDescription)
  	this.informationCompany()
  },

  methods:{
  		updateCompany() {
  			if (this.$refs.form.validate()) {
  				axios.put(config.API_URL+'companies/'+this.$route.query.companyId, {params: {name: this.company.name, address: this.company.address, description: this.company.description}})
  				.then (response => {
  					if(response && response.data.success) {
	  					this.company = response.data.data
	  					 setTimeout(function(){	
	  					 	Vue.notify({
	  					 	 group: 'loggedIn',
	  					 	 type: 'success',
	  					 	 text: 'Update success'
	  					 	});
	  					 },500);

  				}
  				})
  			} else {
  				setTimeout(function(){	
	  					 	Vue.notify({
	  					 	 group: 'loggedIn',
	  					 	 type: 'error',
	  					 	 text: 'Error update'
	  					 	});
	  			},500);
  			}	
  		},

  		informationCompany() {
  			axios.get((config.API_URL+'companies/'+this.$route.query.companyId))
  			.then ((response) => {
  				if(response && response.data.success) {
  					this.company = response.data.data
  				}
  			});
  		},

  		loadChartWithDayMonth() {
  			this.$refs.menu.save(this.date)
  			
  			axios.get(config.API_URL+'company/load-chart?type='+this.valueSelectDateMonth+'&date='+this.date+'&companyId='+this.companyId)
  			.then((response) => {
  				if(response && response.data.success) {
  					this.$root.$emit('companyChart', response.data.data)
  				}
  			});
  		},

  		activeTypeTime(time) {
  			this.typeTime = time
  			let param = {}

  			if(this.typeTime == 'revenue' || this.typeTime == 'month' || this.typeTime == 'year' || this.typeTime == 'week') {
  				
  				param = {type: this.typeTime, company: this.companyId}

  				axios.get(config.API_URL+'company/filter-chart', {params: param})
	  			.then(response => {
	  				if(response && response.data.success) {
	  					
	  					this.$root.$emit('companyChart', [response.data.data, this.typeTime])
	  				}
	  			})

	  			.catch(error => {
	    			console.log(error.response)
	    			if(error.response.status === 404) {
	    				
	  					setTimeout(function(){	
		  					 	Vue.notify({
		  					 	 group: 'loggedIn',
		  					 	 type: 'error',
		  					 	 text: error.response.data.message
		  					 	});
		  				},500);
	  					
	    			}
				});

  			}
  			

  		},

  		saveDate() {
  			this.$refs.menu2.save(this.startTime)
  			this.$refs.menu3.save(this.endTime)
  		},

  		saveStartYear(year) {

  			this.$refs.menu4.save(year);
	      	this.$refs.picker.activePicker = 'YEAR'
	      	this.startTime = year.substr(0,4)
	      	console.clear();
	      	this.menu4 = false;
  		},

  		saveEndYear(year2) {
  			this.$refs.menu5.save(year2);
	      	this.$refs.picker2.activePicker = 'YEAR'
	      	this.endTime = year2.substr(0,4)
	      	console.clear();
	      	this.menu5 = false;
  		},

  		submitFilterTime() {
  			let param = {}
  			if(this.typeTime == 'day' || this.typeTime == 'month' || this.typeTime == 'year') {
  				if(this.startTime == '' || this.endTime == '') {
  					setTimeout(function(){	
	  					 	Vue.notify({
	  					 	 group: 'loggedIn',
	  					 	 type: 'error',
	  					 	 text:'Please choose start time and end time'
	  					 	});
	  				},500);

	  				return false
  				}
  				param = {type: this.typeTime, company: this.companyId, startTime: this.startTime, endTime: this.endTime}

  			} else if(this.typeTime == 'revenue') {

  				param = {type: 'revenue', company: this.companyId}
  			}

  			axios.get(config.API_URL+'company/filter-chart', {params: param})
  			.then(response => {
  				console.log(response);
  				if(response && response.data.success) {
  					
  					this.$root.$emit('companyChart', [response.data.data, this.typeTime])
  				}
  			})

  			.catch(error => {
    			console.log(error.response)
    			if(error.response.status === 404) {
    				
  					setTimeout(function(){	
	  					 	Vue.notify({
	  					 	 group: 'loggedIn',
	  					 	 type: 'error',
	  					 	 text: error.response.data.message
	  					 	});
	  				},500);
  					
    			}
			});
  	// 		var a = moment(this.startTime);
			// var b = moment(this.endTime);
			// var day = moment.duration(b.diff(a)).asDays();
			// alert(day)
  		}
  },

  computed:{
  	typeTimeReturn(){
  		return this.typeTime
  	}

  	// menu4 () {
   //      this.$nextTick(() => (this.$refs.picker.activePicker = 'YEAR'))
   //  }
  }
}
</script>

<style lang="css" scoped>
	.img-responsive {
		margin-left:0px;
		margin-top:70px;
	}
	.company-label{
		color:#607d8b;
		font-size: 17px;	
	}
	.nav-bar-chart{
		font-size:20px;
		font-weight: bold;
	}

	.nav-link {
		color: #6b6d70 !important;
	}

	.active{
		color: #2196f3 !important;
	}

	#date-picker .mx-input{
		height: 55px !important;
	}
</style>